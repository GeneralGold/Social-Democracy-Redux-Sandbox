title: Council Elections
new-page: true
tags: event
priority: -1
view-if: ((year = next_election_year and month >= next_election_month) or (year > next_election_year)) and supreme_soviet
on-departure: month_actions += 1; in_election = 0; next_election_year = next_election_year + 4; n_elections += 1; next_election_time = time + 48;
set-jump: post_election_1928

= Elections, [+ month : month +] [+ year +]

The council elections are to be held now.

- @election_algorithm: May we do our best...
- @cancel_elections

@cancel_elections
title: We cannot hold the elections now. Cancel the elections.
subtitle: This is an anti-democratic move that may backfire.
view-if: in_emergency_government == 1 and president == "Braun" and not presidential_powers

Since we are currently ruling as part of an emergency government, we may use quasi-constitutional trickery to significantly delay these elections, and continue governing via Article 48. This is likely to be extremely unpopular both with our base and with the other parties. However, this may be necessary to prevent the extremists from gaining power.

- @cancel_elections_2: Yes, do it.
- @election_algorithm: No, let's hold the elections.

@cancel_elections_2
on-departure: next_election_year = next_election_year + 1; next_election_time = time + 12; pro_republic -= 10; dvp_relation -= 8; z_relation -= 8; ddp_relation -= 10; kpd_relation -= 8; coup_progress += 2; workers_spd -= 4; new_middle_spd -= 5; old_middle_spd -= 5; rural_spd -= 5; catholics_spd -= 5; unemployed_spd -= 5; coup_progress += 2 if nsdap_normalized >= 0.3; coup_progress += 2 if nsdap_normalized + dnvp_normalized >= 0.5
achievement: ausnahmezustand

Fine. President [+ president +] has taken the unprecedented step of canceling these elections. New elections are scheduled for [+ next_election_month : month +] [+ next_election_year +].

Let us hope this does not backfire.

@post_election_1928
on-arrival: {!
// set old results
// election threshold constitutional reform
// banning parties
var new_party_sum = 0;
for (var party of Q.parties) {
    Q['old_' + party + '_r'] = Q[party + '_r'];
    if (Q.constitutional_reform > 0) {
        if (Q['proletariat_' + party + '_normalized'] < Q.electoral_threshold || (Q.electoral_threshold > 1 && party == 'other') || (Q[party + '_banned'] == 1)) {
            Q[party + '_r'] = 0;
        } else {
            Q[party + '_r'] = Q['proletariat_' + party + '_normalized'];
        }
        new_party_sum += Q[party + '_r'];
    } else {
        Q[party + '_r'] = Q['proletariat_' + party + '_normalized'];
    }
    Q['change_' + party + '_r'] = Q[party + '_r'] - Q['old_' + party + '_r'];
    var sign = Q['change_' + party + '_r'] > 0 ? '+'  : '';
    Q['str_change_' + party] = sign + Q['change_' + party + '_r'];//.toFixed(1);
}
// calculate new party sum if electoral reform
if (Q.electoral_threshold && Q.electoral_threshold > 0 || Q.party_bans) {
    for (var party of Q.parties) {
        if (Q[party + '_r'] > 0) {
            Q[party + '_r'] = Math.round(Q[party + '_r']*100/new_party_sum);
        }
        Q['change_' + party + '_r'] = Q[party + '_r'] - Q['old_' + party + '_r'];
        var sign = Q['change_' + party + '_r'] > 0 ? '+'  : '';
        Q['str_change_' + party] = sign + Q['change_' + party + '_r'];//.toFixed(1);
    }
}

// get change arrows and signs


// The largest party can only be the NSDAP or the SPD.
Q.largest_party = 'SPD';
if (Q.nsdap_r >= Q.spd_r && Q.nsdap_r >= Q.kpd_r) {
    Q.largest_party = 'NSDAP';
}
if (Q.kpd_r >= Q.spd_r && Q.kpd_r >= Q.nsdap_r) {
    Q.largest_party = 'KPD';
}

// coalitions
Q.weimar_coalition = Q.spd_r + Q.ddp_r + Q.z_r - 3;
Q.grand_coalition = Q.spd_r + Q.ddp_r + Q.z_r + Q.dvp_r;
Q.bourgeois_coalition = Q.ddp_r + Q.z_r + Q.dvp_r + Q.other_r;
Q.center_right_coalition = Q.z_r + Q.ddp_r + Q.dvp_r + Q.other_r + Q.dnvp_r;
Q.right_coalition = Q.z_r + Q.dvp_r + Q.other_r + Q.dnvp_r;
Q.far_right_coalition = Q.dnvp_r + Q.nsdap_r;
Q.left_coalition = Q.spd_r + Q.kpd_r;
// this is an absurd concept lol
Q.popular_front_coalition = Q.spd_r + Q.kpd_r + Q.z_r + Q.ddp_r - 3;
Q.anti_democratic_coalition = Q.kpd_r + Q.nsdap_r + Q.dnvp_r;
// aka everyone except nazi, kpd, dnvp
Q.neo_weimar_coalition = Q.spd_r + Q.ddp_r + Q.z_r + Q.dvp_r + Q.other_r;
// Hitler + Right-wing parties (only comes into effect if you've alienated Z too badly)
Q.hitler_right_coalition = Q.z_r + Q.dnvp_r + Q.nsdap_r;
// Progressive coalition isn't going to be implemented as a distinct coalition but it's the coalition that lets you pass improved women's rights/gay rights
Q.progressive_coalition = Q.spd_r + Q.sapd_r + Q.kpd_r + Q.ddp_r;

Q.leverage = Q.spd_r;

Q.grand_coalition_failed = 0;
// Reset government and ministers... Based on BrÃ¼ning's 1930 govt
Q.coalition_dissent = 0;
Q.kpd_coalition_dissent = 0;
Q.spd_in_government = 0;
Q.in_weimar_coalition = 0;
Q.in_grand_coalition = 0;
Q.in_left_front = 0;
Q.in_popular_front = 0;
Q.in_emergency_government = 0;
Q.in_minority_government = 0;
Q.in_unity_government = 0;
Q.spd_toleration = 0;
Q.spd_caretaker = 0;
Q.foreign_minister_party = 'DVP';
Q.interior_minister_party = 'Z';
Q.justice_minister_party = 'I';
Q.labor_minister_party = 'Z';
Q.reichswehr_minister_party = 'I';
Q.economic_minister_party = 'DDP';
Q.finance_minister_party = 'DVP';
Q.agriculture_minister_party = 'Z';

// reset KPD goals
Q.kpd_goals_seen = 0;
Q.kpd_ultimatum_seen = 0;
Q.welfare_goal = 0;
Q.agriculture_goal = 0;
Q.economy_goal = 0;
Q.finance_goal = 0;
Q.labor_goal = 0;
Q.foreign_goal = 0;
Q.interior_goal = 0;
Q.reichswehr_goal = 0;

Q.welfare_goal_completed = 0;
Q.agriculture_goal_completed = 0;
Q.economy_goal_completed = 0;
Q.finance_goal_completed = 0;
Q.labor_goal_completed = 0;
Q.foreign_goal_completed = 0;
Q.interior_goal_completed = 0;
Q.reichswehr_goal_completed = 0;

Q.strike_term_seen = 0;

Q.z_minus_bvp_r = Q.z_r - 3;

var election_result = {'date': new Date(Q.year, Q.month - 1)};
for (var party of Q.parties) {
    election_result[party] = Q[party + '_r'];
}
Q.election_records.push(election_result);
!}
on-departure: nazi_urgency = 1 if (nazi_urgency == 0 and nsdap_r >= 15)
on-display: {!
if (Q.sapd_formed == 1) {
    data = [
        {    "id": "kpd",
            "legend": "KPD",
            "name": "KPD",
            "seats": Q.kpd_r*5,
        },
        {
            "id": "sapd",
            "legend": "SAPD",
            "name": "SAPD",
            "seats": Q.sapd_r*5,
        },
        {
            "id": "spd",
            "legend": "SPD",
            "name": "SPD",
            "seats": Q.spd_r*5,
        },
        {
            "id": "ddp",
            "legend": "DDP",
            "name": "DDP",
            "seats": Q.ddp_r*5,
        },
        {
            "id": "z",
            "legend": "Center",
            "name": "Center",
            "seats": (Q.z_r - 3)*5,
        },
        {
            "id": "bvp",
            "legend": Q.bvp_name,
            "name": Q.bvp_name,
            "seats": 3*5,
        },
        {
            "id": "dvp",
            "legend": "DVP",
            "name": "DVP",
            "seats": Q.dvp_r*5,
        },
        {
            "id": "other",
            "legend": "Other",
            "name": "Other",
            "seats": Q.other_r*5,
        },
        {
            "id": "dnvp",
            "legend": "DNVP",
            "name": "DNVP",
            "seats": Q.dnvp_r*5,
        },
        {
            "id": "nsdap",
            "legend": "NSDAP",
            "name": "NSDAP",
            "seats": Q.nsdap_r*5,
        },
    ];
}
else {
    data = [
        {   "id": "kpd",
            "legend": "KPD",
            "name": "KPD",
            "seats": Q.kpd_r*5,
        },
        {
            "id": "spd",
            "legend": "SPD",
            "name": "SPD",
            "seats": Q.spd_r*5,
        },
        {
            "id": "ddp",
            "legend": "DDP",
            "name": "DDP",
            "seats": Q.ddp_r*5,
        },
        {
            "id": "z",
            "legend": "Center",
            "name": "Center",
            "seats": (Q.z_r - 3)*5,
        },
        {
            "id": "bvp",
            "legend": "BAP",
            "name": "BAP",
            "seats": 3*5,
        },
        {
            "id": "dvp",
            "legend": "DVP",
            "name": "DVP",
            "seats": Q.dvp_r*5,
        },
        {
            "id": "other",
            "legend": "Other",
            "name": "Other",
            "seats": Q.other_r*5,
        },
        {
            "id": "dnvp",
            "legend": "DNVP",
            "name": "DNVP",
            "seats": Q.dnvp_r*5,
        },
        {
            "id": "nsdap",
            "legend": "NSDAP",
            "name": "NSDAP",
            "seats": Q.nsdap_r*5,
        },
    ];
}
if (window && d3) {
    var width = 500; 
    var height = 500;
    var screenWidth = document.getElementById('content').offsetWidth;
    if (screenWidth < width - 50) {
        width = screenWidth - 50; 
        height = width;
        document.getElementById("reichstag").style.height = screenWidth/2 + "px";
    } 

    var parliament = d3.parliament();
    parliament.width(width).height(height).innerRadiusCoef(0.4);
    parliament.enter.fromCenter(true).smallToBig(true);
    parliament.exit.toCenter(false).bigToSmall(true);
    d3.select("#reichstag").datum(data).call(parliament);
}
!}
go-to: coalition_menu

**Election results:**

{!<svg id="reichstag" style="width: 500px; height: 250px;"> </svg>!}

{!<table>!} 
{!<tr><td>Party</td><td>Vote share</td><td>% Change</td></tr>!}
{!<tr><td><div class="box" style='background-color:#E3000F; outline: 2px; outline-style: solid;'> </div> !} **SPD:** {!</td><td>!} **[+ spd_r +]%** {!</td><td>!} **[+ str_change_spd +]** {!</td></tr>!}

[? if sapd_formed == 1 : {!<tr><td><div class="box" style='background-color:#FF7F50'> </div> !}SAPD: {!</td><td>!} [+ sapd_r +]% {!</td><td>!} [+ str_change_sapd +] {!</td></tr>!} ?]

{!<tr><td><div class="box" style='background-color:#8B0000'> </div> !}KPD: {!</td><td>!} [+ kpd_r +]% {!</td><td>!} [+ str_change_kpd +] {!</td></tr>!}

{!<tr><td><div class="box" style='background-color:#DCCA4A'> </div> !} DDP: {!</td><td>!} [+ ddp_r +]% {!</td><td>!} [+ str_change_ddp +] {!</td></tr>!}

{!<tr><td><div class="box" style='background-color:#000'> </div> !} Z: {!</td><td>!} [+ z_minus_bvp_r +]% {!</td><td>!} [+ str_change_z +] {!</td></tr>!}

{!<tr><td><div class="box" style='background-color:#69A2BE'> </div> !} [+ bvp_name +]: {!</td><td>!} 3% {!</td><td>!} 0 {!</td></tr>!}

{!<tr><td><div class="box" style='background-color:#D5AC27'> </div> !} DVP: {!</td><td>!} [+ dvp_r +]% {!</td><td>!} [+ str_change_dvp +] {!</td></tr>!}
 
{!<tr><td><div class="box" style='background-color:#a0a0a0'> </div> !} Others: {!</td><td>!} [+ other_r +] % {!</td><td>!} [+ str_change_other +] {!</td></tr>!}

{!<tr><td><div class="box" style='background-color:#3f7bc1'> </div> !} DNVP: {!</td><td>!} [+ dnvp_r +]% {!</td><td>!} [+ str_change_dnvp +] {!</td></tr>!}

{!<tr><td><div class="box" style='background-color:#954B00'> </div> !} NSDAP: {!</td><td>!} [+ nsdap_r +]% {!</td><td>!} [+ str_change_nsdap +] {!</td></tr>!}
{!</table>!}

There are some potential coalition arrangements.

@coalition_menu

- @election_1928.spd_majority
- @election_1928.weimar_coalition
- @election_1928.grand_coalition
- @election_1928.new_grand_coalition
- @election_1928.unity_government
- @election_1928.right_coalition
- @election_1928.far_right_coalition
- @election_1928.no_majority
- @election_1928.brauns_dilemma
- @election_1928.left_coalition
- @election_1928.kpd_majority
- @election_1928.popular_front_coalition
- @election_1928.no_majority_hitler
- @election_1928.no_govt_3